# Lesson 24
# 14.10.2023
"""
1. Разбор ДЗ №20 - Декоратор с параметрами
2. Обозначение проблемы - зачем нужно ООП?
3. Синтаксис именования классов
4. Создание класса
5. Создание экземпляра класса
6. Посмотрели ID экземпляра класса и Тип экземпляра класса
7. Создали первое поле класса
8. Self - это ссылка на сам экземпляр класса
9. Init - это специальный метод, который вызывается при создании экземпляра класса
10. Создали первый метод класса
11. Добавили док-строку к методу и классу
12. Посмотрели на дандер-метод __str__, который вызывается при принте экземпляра класса
"""


class NestedDoll:
    """
    Класс, который описывает матрешку
    """
    # Init - это специальный метод, который вызывается при создании экземпляра класса
    # В него передаются параметры, которые мы передаем при создании экземпляра класса
    # self - это ссылка на сам экземпляр класса
    # self - это обязательный параметр
    def __init__(self, color: str, size: int, material: str) -> None:
        self.color = color
        self.size = size
        self.material = material

    def __str__(self):
        return f"Матрешка цвета {self.color} размером {self.size} материал: {self.material}"

    def get_color(self) -> str:
        """
        Метод, который возвращает цвет куклы
        :return: Цвет матрешки
        """
        return self.color


# Создание экземпляра класса
doll1: NestedDoll = NestedDoll("Красный", 10, "Дерево")
doll2: NestedDoll = NestedDoll("Зеленый", 15, "Пластик")

print(doll1.color)
print(doll2.get_color())

print(doll1)




