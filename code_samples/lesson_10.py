# –†–∞–∑–±–æ—Ä –î–ó —Å –ú–∞—Ä–≤–µ–ª (–ø–æ–∏—Å–∫ –ø–æ —Å–ª–æ–≤–∞—Ä—é)
# PYTHON 329 HW ‚Ññ8
"""
# –î–æ–º–∞—à–Ω–µ–µ –∑–∞–¥–∞–Ω–∏–µ üìÉ

1. –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ —ç—Ç–æ—Ç –¥–∞—Ç–∞—Å–µ—Ç –≤ –æ—Ç–¥–µ–ª—å–Ω—ã–π —Ñ–∞–π–ª
2. –°–æ–∑–¥–∞–π—Ç–µ –≤—Ç–æ—Ä–æ–π —Ñ–∞–π–ª –≤ –ø—Ä–æ–µ–∫—Ç–µ
3. –ò–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –¥–∞—Ç–∞—Å–µ—Ç –≤ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª `from filename import your_dict`
4. –ú–æ–∂–µ—Ç–µ –ø—Ä–∏—Å—Ç—É–ø–∞—Ç—å –∫ –î–ó üôÇ

–ú—ã –±—É–¥–µ–º –∏—Å–∫–∞—Ç—å –ø–æ–¥–±–æ—Ä–∫—É —Ñ–∏–ª—å–º–æ–≤ –ø–æ –≤—Å–µ–ª–µ–Ω–Ω–æ–π –ú–∞—Ä–≤–µ–ª. –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ü–∏—Ñ—Ä–∞–º–∏ —Ñ–∞–∑—É (—Ç–æ–ª—å–∫–æ –æ–¥–Ω—É).

–ù–∞–ø—Ä–∏–º–µ—Ä `2`

–ú—ã —Å–≤–µ—Ä—è–µ–º—Å—è —Å–æ —Å–ª–æ–≤–∞—Ä—ë–º (–≤–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç –µ–≥–æ –Ω–∞–ø–∏—Å–∞—Ç—å) –≥–¥–µ –∫–ª—é—á–∏ - —ç—Ç–æ —Ü–∏—Ñ—Ä—ã, –∞ –∑–Ω–∞—á–µ–Ω–∏—è –∑–∞–ø–∏—Å–∞–Ω—ã —Å—Ç—Ä–æ–∫–æ–≤—ã–º —Ç–∏–ø–æ–º (—Ç–∞–∫, –∫–∞–∫ —ç—Ç–æ –Ω–∞–ø–∏—Å–∞–Ω–æ –≤ –Ω–∞—à–µ–π –±–∞–∑–µ)

–ù–∞–ø—Ä–∏–º–µ—Ä

```python
stage = {
		 1:"–ü–µ—Ä–≤–∞—è —Ñ–∞–∑–∞",
		 2: "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –¥–∞–ª—å—à–µ :)"
}
```
–°–≤–µ—Ä—å—Ç–µ—Å—å —Å "–±–∞–∑–æ–π" - —Å–¥–µ–ª–∞–π—Ç–µ —Ç–∞–∫–æ–π —Å–ª–æ–≤–∞—Ä–∏–∫.

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Å—Ç—Ä–æ–∫—É - `raise TypeError` –∏ –ø–∏—à–µ–º —á—Ç–æ –æ–∂–∏–¥–∞–µ–º –ø–æ–ª—É—á–∏—Ç—å –æ—Ç –Ω–µ–≥–æ —Ü–∏—Ñ—Ä—É

–ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π –Ω–æ–º–µ—Ä - –¥–µ–ª–∞–µ–º –µ–º—É `raise ValueError` –∏ –ø–∏—à–µ–º —á—Ç–æ —Ç–∞–∫–æ–π —Ñ–∞–∑—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç.

–ï—Å–ª–∏ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–∞—è —Ñ–∞–∑–∞ –µ—Å—Ç—å –≤ –∫–ª—é—á–∞—Ö –Ω–∞—à–µ–≥–æ —Å–ª–æ–≤–∞—Ä—è, –º—ã –≤—ã—Ç–∞—Å–∫–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä `–ü–µ—Ä–≤–∞—è —Ñ–∞–∑–∞` –∏ –¥–µ–ª–∞–µ–º –ø–æ–∏—Å–∫ –ø–æ –Ω–∞—à–µ–π –±–∞–∑–µ.

–û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ –Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–æ–∫—É–º–µ–Ω—Ç–∞. –í–∞–º –Ω—É–∂–Ω–æ –±—É–¥–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –≤–ª–æ–∂–µ–Ω–Ω—ã–º —Å–ª–æ–≤–∞—Ä—ë–º!

–£–¥–∞—á–∏!!! üåû

# –ö—Ä–∏—Ç–µ—Ä–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ üëå

1. –ï—Å—Ç—å –∏–º–ø–æ—Ä—Ç –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π —Å "–±–∞–∑–æ–π"
2. –ï—Å—Ç—å —Å–ª–æ–≤–∞—Ä—å —Å —Ñ–∞–∑–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Å–¥–µ–ª–∞–ª–∏ —Å–∞–º–∏
3. –ï—Å—Ç—å `raise TypeError` –ø—Ä–∏ –≤–≤–æ–¥–µ —á–µ–≥–æ-—Ç–æ –æ—Ç–ª–∏—á–Ω–æ–≥–æ –æ—Ç —á–∏—Å–ª–∞
4. –ï—Å—Ç—å `raise ValueError` –ø—Ä–∏ –≤–≤–æ–¥–µ –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π —Ñ–∞–∑—ã
5. –ï—Å—Ç—å –ø–æ–∏—Å–∫ –≤ —Ü–∏–∫–ª–µ (–∏–ª–∏ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–º) –ø–æ —Ñ–∏–ª—å–º–∞–º
6. –ï—Å—Ç—å —É—Å–ø–µ—à–Ω—ã–π –ø–æ–∏—Å–∫ —Å –ø—Ä–∏–Ω—Ç–æ–º (–≤ –ª—é–±–æ–º –≤–∏–¥–µ, —Å—Ç—Ä–æ–∫–∞, —Å–ø–∏—Å–æ–∫, —á—Ç–æ-—É–≥–æ–¥–Ω–æ)
7. pep8
8. –ù–µ–π–º–∏–Ω–≥ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö


"""

# stage = {
#     1: "–ü–µ—Ä–≤–∞—è —Ñ–∞–∑–∞",
#     2: "–í—Ç–æ—Ä–∞—è —Ñ–∞–∑–∞",
#     3: "–¢—Ä–µ—Ç—å—è —Ñ–∞–∑–∞",
#     4: "–ß–µ—Ç–≤—ë—Ä—Ç–∞—è —Ñ–∞–∑–∞",
#     5: "–ü—è—Ç–∞—è —Ñ–∞–∑–∞",
#     6: "–®–µ—Å—Ç–∞—è —Ñ–∞–∑–∞",
# }

# –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —Ü–∏—Ñ—Ä–∞–º–∏ —Ñ–∞–∑—É (—Ç–æ–ª—å–∫–æ –æ–¥–Ω—É).
# user_input = input(
#     "–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ñ–∞–∑—ã –æ—Ç 1 –¥–æ 6: ")  # –ú–æ–∂–Ω–æ —Å–¥–µ–ª–∞—Ç—å –±–ª–æ–∫ try-except, –∏ –≤ –±–ª–æ–∫–µ except –≤—ã–∑—ã–≤–∞—Ç—å –∏—Å–∫–ª—é—á–µ–Ω–∏–µ ValueError
# –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ —Ç–∏–ø –¥–∞–Ω–Ω—ã—Ö (–º–µ—Ç–æ–¥–æ–º —Å—Ç—Ä–æ–∫) - –µ—Å–ª–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ –ø—Ä–æ–π–¥–µ–Ω–∞, —Ç–æ –≤—ã–∑—ã–≤–∞–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏–µ
# TypeError –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —Ç–æ, —á—Ç–æ –≤–≤–µ–¥–µ–Ω –≤–µ—Ä–Ω—ã–π –¥–∏–∞–ø–∞–∑–æ–Ω –∑–Ω–∞—á–µ–Ω–∏–π. (–õ–∏–±–æ –∏–Ω—Ç—É–µ–º –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏–∞–ø–∞–∑–æ–Ω), –ª–∏–±–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º
# –≤–≤–µ–¥–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –≤ —Å–ª–æ–≤–∞—Ä–µ
# str_stage = stage.get(int(user_input))  # –§–∞–∑–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏ - "–ü–µ—Ä–≤–∞—è —Ñ–∞–∑–∞"
# results = []

# for item in full_dict.values():
#     if item['stage'] == str_stage:
#         results.append(item['title'])

# –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å–ø–∏—Å–∫–∞
# results = [item['title'] for item in full_dict.values() if item['stage'] == str_stage]

# print(", ".join(results))  # –í—ã–≤–æ–¥–∏–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏

# –ß—Ç–µ–Ω–∏–µ –∏ –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
# UTF-8, windows-1251, ascii

# file = open("my_file.txt", "w")  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏
# file.write("–ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!")       # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –≤ —Ñ–∞–π–ª
# file.close() # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª. –í–∞–∂–Ω–æ! –ü–æ—Ç–æ–º—É —á—Ç–æ —Ñ–∞–π–ª –º–æ–∂–µ—Ç –±—ã—Ç—å –∑–∞–Ω—è—Ç –¥—Ä—É–≥–∏–º –ø—Ä–æ—Ü–µ—Å—Å–æ–º, –∏ –µ—Å–ª–∏ –º—ã –Ω–µ –∑–∞–∫—Ä–æ–µ–º –µ–≥–æ


# –§–õ–ê–ì–ò –û–¢–ö–†–´–¢–ò–Ø –§–ê–ô–õ–ê
# r - read (—á—Ç–µ–Ω–∏–µ) - –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Ç–æ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞
# w - write (–∑–∞–ø–∏—Å—å) - –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Ç–æ –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω, –∏–ª–∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞–Ω
# a - append (–¥–æ–∑–∞–ø–∏—Å—å) - –ï—Å–ª–∏ —Ñ–∞–π–ª–∞ –Ω–µ—Ç, —Ç–æ –æ–Ω –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω, –∏–ª–∏ –¥–æ–∑–∞–ø–∏—Å–∞–Ω
# b - binary (–±–∏–Ω–∞—Ä–Ω—ã–π —Ä–µ–∂–∏–º) - –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è–º–∏, –≤–∏–¥–µ–æ, –∞—É–¥–∏–æ

# –†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º (with)

# message = """
# –ü—Ä–∏–≤–µ—Ç, –º–∏—Ä!\n
# –ú—ã –∏–∑—É—á–∞–µ–º —Ñ–∞–π–ª—ã –≤ Python\n
# """
#
# with open("my_file.txt", "w", encoding='UTF-8') as file:
#     file.write(message)

# –ü–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ txt —á–µ—Ä–µ–∑ –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä
# readline() - —á–∏—Ç–∞–µ—Ç –æ–¥–Ω—É —Å—Ç—Ä–æ–∫—É
# readlines() - —á–∏—Ç–∞–µ—Ç –≤—Å–µ —Å—Ç—Ä–æ–∫–∏ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–∏—Å–æ–∫ —Å—Ç—Ä–æ–∫

# with open("my_file.txt", "r", encoding='UTF-8') as file:
#     for line in file:
#         print(line)
#
# # –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞ —Ü–µ–ª–∏–∫–æ–º —á–µ—Ä–µ–∑ –º–µ—Ç–æ–¥ readlines()
# with open("my_file.txt", "r", encoding='UTF-8') as file:
#     lines = file.readlines()
#
# print([line.strip() for line in lines])

# –ü–æ—Å—Ç—Ä–æ—á–Ω–∞—è –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
# some_str = ['–ï—â—ë –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞', '–ò –µ—â—ë –æ–¥–Ω–∞ —Å—Ç—Ä–æ–∫–∞']
# with open("my_file.txt", "a", encoding='UTF-8') as file:
#     for line in some_str:
#         file.write(line + '\n')


# –£–∂–µ –∏–∑—É—á–∏–ª–∏
# 1. –û—Ç–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
# 2. –ó–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
# 3. –ß—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
# 4. –ü–æ—Å—Ç—Ä–æ—á–Ω–æ–µ —á—Ç–µ–Ω–∏–µ —Ñ–∞–π–ª–∞
# 5. –ü–æ—Å—Ç—Ä–æ—á–Ω–∞—è –∑–∞–ø–∏—Å—å –≤ —Ñ–∞–π–ª
# 6. –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä

# –†–ê–ë–û–¢–ê –° JSON
# JSON - JavaScript Object Notation
# JSON - —ç—Ç–æ —Ñ–æ—Ä–º–∞—Ç –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä—ã–π –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è
# –æ–±–º–µ–Ω–∞ –¥–∞–Ω–Ω—ã–º–∏ –º–µ–∂–¥—É —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ —è–∑—ã–∫–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—è. Back-end –∏ Front-end

# –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å JSON

# –†–∞–±–æ—Ç–∞–µ–º —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏
# json.dumps() - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –æ–±—ä–µ–∫—Ç Python –≤ —Å—Ç—Ä–æ–∫—É JSON
# json.loads() - –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç —Å—Ç—Ä–æ–∫—É JSON –≤ –æ–±—ä–µ–∫—Ç Python
# –†–∞–±–æ—Ç–∞–µ–º —Å —Ñ–∞–π–ª–∞–º–∏
# json.dump() - –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç Python –≤ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
# json.load() - —á–∏—Ç–∞–µ—Ç JSON –∏–∑ —Ñ–∞–π–ª–∞ –∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤ –æ–±—ä–µ–∫—Ç Python

# –ü—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON
#
# with open("my_file.json", "w", encoding="utf-8") as file:
#     json.dump(full_dict, file) # 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞. 1. –°–ª–æ–≤–∞—Ä—å, 2. –§–∞–π–ª


# with open("my_file.json", "w", encoding="utf-8") as file:
#     # ensure_ascii=False - –æ—Ç–∫–ª—é—á–∞–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ ASCII
#     json.dump(full_dict, file, ensure_ascii=False)  # 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞. 1. –°–ª–æ–≤–∞—Ä—å, 2. –§–∞–π–ª
#
# with open("cities.json", "w", encoding="utf-8") as file:
#     # ensure_ascii=False - –æ—Ç–∫–ª—é—á–∞–µ—Ç –∫–æ–¥–∏—Ä–æ–≤–∫—É –≤ —Ñ–æ—Ä–º–∞—Ç–µ ASCII
#     # indent=1 - –æ—Ç—Å—Ç—É–ø—ã –≤ 1 –ø—Ä–æ–±–µ–ª
#     json.dump(full_dict, file, ensure_ascii=False, indent=4)  # 2 –∞—Ä–≥—É–º–µ–Ω—Ç–∞. 1. –°–ª–æ–≤–∞—Ä—å, 2. –§–∞–π–ª

# –î–ª—è —ç–∫—Å–µ–ª—è –Ω–∞–¥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —Å—Ç–æ—Ä–æ–Ω–Ω–∏–µ –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
# Openpyxl - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å xlsx
# csv - comma separated values - –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å csv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å csv
import csv

#  `csv.reader(file)`: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç —á–∏—Ç–∞—Ç—å CSV —Ñ–∞–π–ª –ø–æ—Å—Ç—Ä–æ—á–Ω–æ.
# - `csv.writer(file)`: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª.
# - `csv.DictReader(file)`: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –ø–æ–∑–≤–æ–ª—è–µ—Ç —á–∏—Ç–∞—Ç—å CSV —Ñ–∞–π–ª –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è.
# - `csv.DictWriter(file, fieldnames)`: –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª –≤ –≤–∏–¥–µ —Å–ª–æ–≤–∞—Ä—è.

some_csv = """
–ù–∞–∑–≤–∞–Ω–∏–µ,–¶–µ–Ω–∞,–ö–∞—Ç–µ–≥–æ—Ä–∏—è
–Ø–±–ª–æ–∫–∏,1.5,–§—Ä—É–∫—Ç—ã
–ú–æ–ª–æ–∫–æ,2,–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã
–•–ª–µ–±,0.8,–•–ª–µ–±–æ–±—É–ª–æ—á–Ω—ã–µ –∏–∑–¥–µ–ª–∏—è
"""

data = [
    ["–ù–∞–∑–≤–∞–Ω–∏–µ", "–¶–µ–Ω–∞", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"],
    ["–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", 0.5, "–û–≤–æ—â–∏"],
    ["–°—ã—Ä", 3, "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã"]
]
# newline="" - —É–±–∏—Ä–∞–µ—Ç –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏
with open("../new_products.csv", "w", newline="", encoding="windows-1251") as file:
    writer = csv.writer(file)  # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç writer
    writer.writerows(data)  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª

# –î–µ–ª–∞–µ–º —Ç–æ –∂–µ —Å–∞–º–æ–µ, –Ω–æ —Å —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª–µ–º;
with open("../new_products.csv", "w", newline="", encoding="windows-1251") as file:
    writer = csv.writer(file, delimiter=";")  # —Å–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç writer
    writer.writerows(data)  # –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª
#
# **–ß—Ç–µ–Ω–∏–µ CSV —Ñ–∞–π–ª–∞ —Å –ø–æ–º–æ—â—å—é `csv.reader()`**
#
# ```python
# import csv
#
# with open("products.csv", "r", newline="", encoding="utf-8") as file:
#     reader = csv.reader(file)
#     for row in reader:
#         print(row)
# ```
#
# **–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –≤ CSV —Ñ–∞–π–ª —Å –ø–æ–º–æ—â—å—é `csv.writer()`**
#
# ```python
# data = [
#     ["–ö–∞—Ä—Ç–æ—Ñ–µ–ª—å", 0.5, "–û–≤–æ—â–∏"],
#     ["–°—ã—Ä", 3, "–ú–æ–ª–æ—á–Ω—ã–µ –ø—Ä–æ–¥—É–∫—Ç—ã"]
# ]
#
# with open("new_products.csv", "w", newline="", encoding="utf-8") as file:
#     writer = csv.writer(file)
#     writer.writerows(data)
# ```
#
# **–ß—Ç–µ–Ω–∏–µ CSV —Ñ–∞–π–ª–∞ –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—è —Å –ø–æ–º–æ—â—å—é `csv.DictReader()`**
#
# ```python
# with open("products.csv", "r", newline="", encoding="utf-8") as file:
#     reader = csv.DictReader(file)
#     for row in reader:
#         print(row["–ù–∞–∑–≤–∞–Ω–∏–µ"], row["–¶–µ–Ω–∞"], row["–ö–∞—Ç–µ–≥–æ—Ä–∏—è"])
# ```
#
# **–ó–∞–ø–∏—Å—å –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ —Å–ª–æ–≤–∞—Ä—è —Å –ø–æ–º–æ—â—å—é `csv.DictWriter()`**
#
# ```python
# data = [
#     {"–ù–∞–∑–≤–∞–Ω–∏–µ": "–ú–æ—Ä–∫–æ–≤—å", "–¶–µ–Ω–∞": 0.3, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–û–≤–æ—â–∏"},
#     {"–ù–∞–∑–≤–∞–Ω–∏–µ": "–Ø–π—Ü–∞", "–¶–µ–Ω–∞": 1.2, "–ö–∞—Ç–µ–≥–æ—Ä–∏—è": "–ü—Ä–æ–¥—É–∫—Ç—ã"}
# ]

# fieldnames = ["–ù–∞–∑–≤–∞–Ω–∏–µ", "–¶–µ–Ω–∞", "–ö–∞—Ç–µ–≥–æ—Ä–∏—è"]
#
# with open("new_products.csv", "w", newline="", encoding="utf-8") as file:
#     writer = csv.DictWriter(file, fieldnames=fieldnames)
#     writer.writeheader()
#     writer.writerows(data)

# url –ø–æ–≥–æ–¥–Ω–æ–≥–æ API
# city = "–°–∞–Ω–∫—Ç-–ü–µ—Ç–µ—Ä–±—É—Ä–≥"
# wheater_url = fr'https://api.openweathermap.org/data/2.5/' \
#               fr'weather?q={city}&' \
#               fr'appid=23496c2a58b99648af590ee8a29c5348&units=metric&lang=ru'
#
# print(wheater_url)

# response = requests.get(wheater_url) # –¥–µ–ª–∞–µ–º –∑–∞–ø—Ä–æ—Å –º–µ—Ç–æ–¥–æ–º get
# data = response.json() # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ json. –ú–µ—Ç–æ–¥ json() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ª–æ–≤–∞—Ä—å
# pprint(data)
#
# with open("weather.json", "w", encoding="utf-8") as file:
#     json.dump(data, file, indent=4, ensure_ascii=False)
# # indent=4 - –æ—Ç—Å—Ç—É–ø—ã –≤ 4 –ø—Ä–æ–±–µ–ª–∞
# # ensure_ascii=False - –æ—Ç–∫–ª—é—á–∞–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫—É –≤ ASCII (–¥–ª—è –∫–∏—Ä–∏–ª–ª–∏—Ü—ã)
